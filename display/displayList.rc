use std::fmt; // Import the `fmt` module.

// Define a structure named `List` containing a `Vec`.
struct List(Vec<char>);

impl fmt::Display for List {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        // Extract the value using tuple indexing
        // and create a reference to `vec`.
        let vec = &self.0;

        // Iterate over `vec` in `v` while enumerating the iteration
        for (_count, v) in vec.iter().enumerate() {
            // For every element except the first, add a comma.
            // Use the ? operator, or try!, to return on errors.
            write!(f, "{}", v)?;
        }
        // return a fmt::Result value
       write!(f, "")
    }
}

fn main() {
    let v = List(vec!['A', 'k', 's', 'e', 'l']);
    println!("{}", v);
}
